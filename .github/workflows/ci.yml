name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      # # For mollyferguson.info
      # MOLLY_ASTRO_HYGRAPH_ENDPOINT: https://us-east-1-shared-usea1-02.cdn.hygraph.com/content/cm048oo3l01gz07wf7rrq84lg/master
      # # For micah-ferguson  
      # MICAH_ASTRO_HYGRAPH_ENDPOINT: https://us-west-2.cdn.hygraph.com/content/cm4ah46tx01ol07lnfafy43gg/master
      # # GitHub Packages token
      NPM_GH_TOKEN: ${{ secrets.NPM_GH_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run Astro check
      run: npm run astro:check

  publish-utils:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
        registry-url: 'https://npm.pkg.github.com'

    - name: Install dependencies
      run: npm ci

    - name: Build astro-utils
      run: npm run build:utils

    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./packages/astro-utils/package.json').version")
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Try to get the latest published version
        PUBLISHED_VERSION=$(npm view @sferg989/astro-utils version --registry=https://npm.pkg.github.com 2>/dev/null || echo "0.0.0")
        echo "published-version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
        
        if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
          echo "should-publish=true" >> $GITHUB_OUTPUT
          echo "Version changed from $PUBLISHED_VERSION to $CURRENT_VERSION - will publish"
        else
          echo "should-publish=false" >> $GITHUB_OUTPUT
          echo "Version $CURRENT_VERSION already published - skipping"
        fi
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_GH_TOKEN }}

    - name: Publish to GitHub Packages
      if: steps.version-check.outputs.should-publish == 'true'
      run: npm publish --workspace=packages/astro-utils
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_GH_TOKEN }} 