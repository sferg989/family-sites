name: Deploy to Cloudflare

on:
  repository_dispatch:
    types: [cms-content-updated]
  workflow_dispatch:
    inputs:
      site:
        description: 'Which site to deploy'
        required: false
        default: 'both'
        type: choice
        options:
          - both
          - molly
          - micah

jobs:
  determine-sites:
    runs-on: ubuntu-latest
    outputs:
      deploy-molly: ${{ steps.sites.outputs.deploy-molly }}
      deploy-micah: ${{ steps.sites.outputs.deploy-micah }}
    steps:
      - name: Determine sites to deploy
        id: sites
        run: |
          # Check if this was triggered by repository_dispatch
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            # Check if payload has data.id structure
            DATA_ID="${{ github.event.client_payload.data.id }}"
            if [ "$DATA_ID" = "cm04nyf07552w07k4jjp4m99x" ]; then
              SITE_FILTER="molly"
            elif [ -n "$DATA_ID" ]; then
              SITE_FILTER="micah"
            else
              # Fallback to legacy Sitetobuild field if data.id not found
              SITE_FILTER="${{ github.event.client_payload.Sitetobuild || 'both' }}"
            fi
          else
            SITE_FILTER="${{ github.event.inputs.site || 'both' }}"
          fi
          
          case $SITE_FILTER in
            "molly"|"mollyferguson"|"mollyferguson.info")
              echo 'deploy-molly=true' >> $GITHUB_OUTPUT
              echo 'deploy-micah=false' >> $GITHUB_OUTPUT
              ;;
            "micah"|"micah-ferguson")
              echo 'deploy-molly=false' >> $GITHUB_OUTPUT
              echo 'deploy-micah=true' >> $GITHUB_OUTPUT
              ;;
            *)
              echo 'deploy-molly=true' >> $GITHUB_OUTPUT
              echo 'deploy-micah=true' >> $GITHUB_OUTPUT
              ;;
          esac

  deploy-molly:
    needs: determine-sites
    if: needs.determine-sites.outputs.deploy-molly == 'true'
    runs-on: ubuntu-latest
    environment: production
    
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      NPM_GH_TOKEN: ${{ secrets.NPM_GH_TOKEN }}
      ASTRO_HYGRAPH_ENDPOINT: https://us-east-1-shared-usea1-02.cdn.hygraph.com/content/cm048oo3l01gz07wf7rrq84lg/master

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build mollyferguson.info
      run: npm run build:molly

    - name: Deploy mollyferguson.info
      run: npm run deploy:molly

    - name: Report deployment status
      run: |
        echo "ðŸš€ Deployment of mollyferguson.info completed successfully!"
        echo "Triggered by: ${{ github.event_name }}"

  deploy-micah:
    needs: determine-sites
    if: needs.determine-sites.outputs.deploy-micah == 'true'
    runs-on: ubuntu-latest
    environment: production
    
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      NPM_GH_TOKEN: ${{ secrets.NPM_GH_TOKEN }}
      ASTRO_HYGRAPH_ENDPOINT: https://us-west-2.cdn.hygraph.com/content/cm4ah46tx01ol07lnfafy43gg/master

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build micah-ferguson
      run: npm run build:micah

    - name: Deploy micah-ferguson
      run: npm run deploy:micah

    - name: Report deployment status
      run: |
        echo "ðŸš€ Deployment of micah-ferguson completed successfully!"
        echo "Triggered by: ${{ github.event_name }}" 