---

import { getImage } from 'astro:assets';

interface Props {
  src: string;
  alt: string;
  priority?: boolean;
  aspectRatio?: number;
  objectFit?: 'cover' | 'contain';
}

const {
  src,
  alt,
  priority = false,
  aspectRatio = 16/9,
} = Astro.props;

// Function to calculate dimensions while maintaining aspect ratio
const calculateDimensions = (baseWidth: number, targetAspectRatio: number) => {
  // For portrait images (aspect ratio < 1), we'll use height as the base
  if (targetAspectRatio < 1) {
    const height = baseWidth;
    const width = Math.round(height * targetAspectRatio);
    return { width, height };
  }
  // For landscape images, use width as the base
  const width = baseWidth;
  const height = Math.round(width / targetAspectRatio);
  return { width, height };
};

const mobileImg = await getImage({
  src: src,
  ...calculateDimensions(640, aspectRatio),
  format: 'webp',
  quality: 80
});

const tabletImg = await getImage({
  src: src,
  ...calculateDimensions(1024, aspectRatio),
  format: 'webp',
  quality: 80
});

const desktopImg = await getImage({
  src: src,
  ...calculateDimensions(1920, aspectRatio),
  format: 'webp',
  quality: 80
});
---

<div class="image-container" style={`aspect-ratio: ${aspectRatio}`}>
  <picture>
    <source media="(max-width: 640px)" srcset={mobileImg.src} />
    <source media="(max-width: 1024px)" srcset={tabletImg.src} />
    <source media="(min-width: 1025px)" srcset={desktopImg.src} />
    <img
      src={desktopImg.src}
      alt={alt}
      width={desktopImg.attributes.width}
      height={desktopImg.attributes.height}
      loading={priority ? 'eager' : 'lazy'}
      decoding={priority ? 'sync' : 'async'}
      fetchpriority={priority ? 'high' : 'auto'}
    />
  </picture>
</div>

<style>
  .image-container {
    position: relative;
    width: 100%;
    height: auto;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .image-container picture {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: var(--object-fit, contain);
    display: block;
  }
</style>

<style is:global>
  /* Ensure proper aspect ratio handling for portrait images */
  .image-container[style*="aspect-ratio: 0"] {
    aspect-ratio: auto !important;
    height: 100vh;
    max-height: 80vh;
  }
</style>
